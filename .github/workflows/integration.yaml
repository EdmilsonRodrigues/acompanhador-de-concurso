name: Run all validations to assure the code can be integrated to the codebase

on: [push, pull_request]

jobs:
    test:
        name: Run tests on python module ${{ matrix.service }}
        runs-on: ubuntu-latest
        strategy:
            matrix:
                service: [
                  "serviÃ§o-scraper",
                  "backend-service"
                ]
        
        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Set up Python 3.13
              uses: actions/setup-python@v5
              with:
                python-version: "3.13"

            - name: Install poetry
              uses: abatilo/actions-poetry@v4

            - name: Configure poetry
              run: |
                poetry config virtualenvs.create true --local
                poetry config virtualenvs.in-project true --local

            - name: Cache venv
              uses: actions/cache@v4
              with:
                path: ./${{ matrix.service }}/.venv
                key: venv-${{ hashFiles(format('{0}/poetry.lock', matrix.service)) }}
                restore-keys: |
                  venv-

            - name: Hash service code
              id: hash
              run: |
                CODE_HASH=${{ hashFiles(format('{0}/**/*.py', matrix.service)) }}-${{ hashFiles(format('{0}/pyproject.toml', matrix.service)) }}-${{ hashFiles(format('{0}/poetry.lock', matrix.service)) }}
                echo "hash=$CODE_HASH" >> $GITHUB_OUTPUT              

            - name: Cache mypy cache
              uses: actions/cache@v4
              with:
                path: ./${{ matrix.service }}/.mypy_cache
                key: mypy-cache-${{ steps.hash.outputs.hash }}
                restore-keys: |
                  mypy-cache-

            - name: Cache ruff cache
              uses: actions/cache@v4
              with:
                path: ./${{ matrix.service }}/.ruff_cache
                key: ruff-cache--${{ steps.hash.outputs.hash }}
                restore-keys: |
                  ruff-cache-

            - name: Install dependencies
              run: |
                cd ./${{ matrix.service }}

                make install

                eval $(poetry env activate)

            - name: Run static tests
              run: |
                cd ./${{ matrix.service }}

                make static
                make format
                make lint

            - name: Run unit tests
              run: |
                cd ./${{ matrix.service }}

                make unit
            
            - name: Run tests and check coverage
              run: |
                cd ./${{ matrix.service }}

                make ci-test
                make check-coverage
              
            - name: Builds docker image
              run: |
                cd ./${{ matrix.service }}
                make build
            
            - name: Run docker tests
              run: |
                cd ./${{ matrix.service }}
                make docker-test

